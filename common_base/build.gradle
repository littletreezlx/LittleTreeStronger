def android_configs = rootProject.ext.android_configs
def root_dependencies = rootProject.ext.dependencies

apply plugin: 'com.android.library'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'


//apply plugin: "androidx.navigation.safeargs"


android {
    compileSdkVersion android_configs.compileSdk_version
    buildToolsVersion android_configs.buildTools_version

    defaultConfig {
        minSdkVersion android_configs.minSdk_version
        targetSdkVersion android_configs.targetSdk_version
        versionCode android_configs.version_code
        versionName android_configs.version_name
        //MultiDex分包方法
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
//        externalNativeBuild {
//            cmake {
//                cppFlags ""
//            }
//        }
//        javaCompileOptions {
//            annotationProcessorOptions {
//                arguments = [AROUTER_MODULE_NAME: project.getName()]
//                includeCompileClasspath = true
//
//            }
//        }

        //ARouter
        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
            }
        }
    }

//
//    sourceSets {
//        main {
//            if (isDebug.toBoolean()) {
//                manifest.srcFile 'src/debug/AndroidManifest.xml'
//            } else {
//                manifest.srcFile 'src/release/AndroidManifest.xml'
//            }
//        }
//    }

//    lintOptions {
//        abortOnError root_config.abortOnLintError
//        checkReleaseBuilds root_config.checkReleaseBuilds
//        ignoreWarnings root_config.ignoreWarnings
//    }

//    compileOptions {
//        sourceCompatibility Dependencies.javaVersion
//        targetCompatibility Dependencies.javaVersion
//    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }

//    externalNativeBuild {
//        cmake {
//            path "CMakeLists.txt"
//        }
//    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    api 'androidx.appcompat:appcompat:1.0.2'
    api 'androidx.constraintlayout:constraintlayout:2.0.0-alpha3'

//    testImplementation 'junit:junit:4.12'
//    androidTestImplementation 'androidx.test:runner:1.1.1'
//    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'


    //ARouter
    api root_dependencies.arouter
    kapt root_dependencies.arouter_kapt

    //kotlin
    api root_dependencies.kotlin
    api root_dependencies.ktx
    api root_dependencies.anko
    api root_dependencies.anko_recyclerview
    api root_dependencies.anko_recyclerview_corountines


//    implementation 'com.jakewharton:butterknife:8.8.1'
//    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

    //  retrofit+rxjava网络层
    api root_dependencies.retrofit
    api root_dependencies.retrofit_gson
    api root_dependencies.retrofit_rxjava2
    api root_dependencies.rxjava2_android
    api root_dependencies.rxjava2
    api root_dependencies.okhttp
    api root_dependencies.okhttp_loginterceptor

    //jetpack
    kapt root_dependencies.lifecycle_kapt
    kapt root_dependencies.room_kapt

    //lifecycle
    api root_dependencies.lifecycle_ext
    //room
    api root_dependencies.room
    //paging
    api root_dependencies.paging
    //navigation
    api root_dependencies.navigation
    api root_dependencies.navigation_ui
    //workmanager
    api root_dependencies.workmanager


    //di
    api root_dependencies.kodein
    api root_dependencies.kodein_android
    api root_dependencies.kodein_androidx


    //common
    api root_dependencies.gson
    api root_dependencies.timber
    api root_dependencies.rxpermissions

    //database
    api root_dependencies.stetho







}
