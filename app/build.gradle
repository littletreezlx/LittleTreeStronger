def android_configs = rootProject.ext.android_configs
def libs = rootProject.ext.dependencies

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs'
apply plugin: 'android-aspectjx'


android {
    compileSdkVersion android_configs.compileSdk_version
    buildToolsVersion android_configs.buildTools_version

    defaultConfig {
        applicationId "com.example.littletreestronger"

        minSdkVersion android_configs.minSdk_version
        targetSdkVersion android_configs.targetSdk_version
        versionCode android_configs.version_code
        versionName android_configs.version_name
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        //MultiDex分包方法
        multiDexEnabled true
    }
//    signingConfigs {
//        config {
//            keyAlias 'amd'
//            keyPassword '123456'
//            storeFile file('../key/amd.jsk')
//            storePassword '123456'
//        }
//    }

    buildTypes {
        debug {
//            signingConfig signingConfigs.config
            minifyEnabled false
            multiDexKeepFile file('multidex-config.txt')
            multiDexKeepProguard file('multidex-config.pro')
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
//            signingConfig signingConfigs.config
            minifyEnabled false
            multiDexKeepFile file('multidex-config.txt')
            multiDexKeepProguard file('multidex-config.pro')
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }


    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests {
        includeAndroidResources = true

        all {
            testLogging {
                events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            }
        }
        //    Error: "Method ... not mocked"
//    Caution: Setting the returnDefaultValues property to true should be done with care. The null/zero return values can introduce regressions in your tests, which are hard to debug and might allow failing tests to pass. Only use it as a last resort.
//        returnDefaultValues = true
    }

    dataBinding {
        enabled = true
        enabledForTests = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}


aspectjx {
//排除所有package路径中包含`android.support`的class文件及库（jar文件）
//        exclude 'android.support'
    //忽略所有的class文件及jar文件，相当于AspectJX不生效
//        exclude '*'
    exclude 'com.squareup.leakcanary'
    exclude 'leakcanary'
    exclude 'androidx'
    exclude 'com.google.android'

//    exclude("com.example.littletreestronger.common")
//    exclude("com.example.littletreestronger.adapter")

//    include 'com.example.littletreestronger'

//    exclude("com.example.littletreestronger.common.base.MainActivity")
}

afterEvaluate {
    tasks.matching {
        it.name.startsWith('dex')
    }.each { dx ->
        if (dx.additionalParameters == null) {
            dx.additionalParameters = []
        }
        dx.additionalParameters += '--multi-dex' // enable multidex

        // optional
        dx.additionalParameters += "--main-dex-list=$projectDir/class-list.txt".toString() // enable the main-dex-list
        dx.additionalParameters += '--minimal-main-dex'
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Dependencies for local unit tests
    testImplementation "junit:junit:4.12"
    testImplementation "org.mockito:mockito-core:3.1.0"
    testImplementation "org.hamcrest:hamcrest-all:1.3"
//    testImplementation "androidx.arch.core:core-testing:$archTestingVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.2"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.2"
    testImplementation "org.robolectric:robolectric:4.3.1"
    testImplementation "androidx.test.espresso:espresso-core:3.2.0"
    testImplementation "androidx.test.espresso:espresso-contrib:3.2.0"
    testImplementation "androidx.test.espresso:espresso-intents:3.2.0"
    testImplementation "com.google.truth:truth:1.0"
// AndroidX Test - JVM testing
    testImplementation "androidx.test:core-ktx:1.2.0"
    testImplementation "androidx.test.ext:junit-ktx:1.1.1"
    testImplementation "androidx.test:rules:1.2.0"


    // Dependencies for Android unit tests
    androidTestImplementation "junit:junit:4.12"
//    androidTestImplementation "org.mockito:mockito-core:3.1.0"
    //tbd
//    androidTestImplementation "com.linkedin.dexmaker:dexmaker-mockito:$dexMakerVersion"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.2"
    // AndroidX Test - Instrumented testing
    androidTestImplementation "androidx.test:core-ktx:1.2.0"
    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation "androidx.test.ext:junit-ktx:1.1.1"
//    androidTestImplementation 'androidx.test.ext:truth:1.2.0'
//    androidTestImplementation 'com.google.truth:truth:1.0'
    androidTestImplementation "androidx.room:room-testing:2.2.0"
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-accessibility:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-web:3.2.0'
    androidTestImplementation 'androidx.test.espresso.idling:idling-concurrent:3.2.0'
    androidTestImplementation "org.robolectric:annotations:4.3.1"
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
    implementation "androidx.test.espresso:espresso-idling-resource:3.2.0"
    // Optional -- Hamcrest library
//    androidTestImplementation 'org.hamcrest:hamcrest-library:1.3'


//    testImplementation 'junit:junit:4.12'
//    testImplementation "org.mockito:mockito-core:3.1.0"
    testImplementation "org.powermock:powermock-module-junit4:2.0.2"
    testImplementation "org.powermock:powermock-module-junit4-rule:2.0.2"
    testImplementation "org.powermock:powermock-api-mockito2:2.0.2" //注意这里是mockito2
    testImplementation "org.powermock:powermock-classloading-xstream:2.0.2"
//    testImplementation "org.robolectric:robolectric:4.3.1"

    //android
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta2'
    implementation 'androidx.recyclerview:recyclerview:1.1.0-beta05'

    implementation 'androidx.multidex:multidex:2.0.1'

    //kotlin
    implementation libs.kotlin
    implementation "androidx.core:core-ktx:1.1.0"
    implementation libs.anko
    implementation libs.anko_recyclerview
    implementation libs.anko_recyclerview_corountines

    //  retrofit+rxjava网络层
    implementation libs.retrofit
    implementation libs.retrofit_gson

//    implementation libs.retrofit_rxjava2
//    implementation libs.rxjava2_android
//    implementation libs.rxjava2

    implementation libs.okhttp
    implementation libs.okhttp_loginterceptor

    //jetpack
    //lifecycle
    kapt           libs.lifecycle_kapt
    implementation libs.lifecycle_ext
//    implementation libs.lifecycle_viewmodel
//    testImplementation libs.lifecycle_test

    //room
    kapt           libs.room_kapt
    implementation libs.room
//    implementation libs.room_ktx

    //paging
    implementation libs.paging
    //navigation
    implementation libs.navigation
    implementation libs.navigation_ui
    //workmanager
    implementation libs.workmanager

    //di
    implementation libs.kodein
    implementation libs.kodein_android
    implementation libs.kodein_androidx

    //database
    implementation libs.stetho

//    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.0.0'

    implementation 'org.aspectj:aspectjrt:1.8.13'
//    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.2'
//    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.2'

    //common
    implementation libs.gson
    implementation libs.timber
    implementation libs.rxpermissions
    debugImplementation libs.leakcanary
    implementation libs.glide
    kapt libs.glide_kapt
    implementation libs.glide_transformations

}